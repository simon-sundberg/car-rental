@page "/"
@using Car_Rental.Business.Classes;
@using Car_Rental.Common.Classes;
@inject BookingProcessor bp;

<PageTitle>Car Rental</PageTitle>

<h1>Car Rental</h1>

<ErrorList Title="Errors when adding a vehicle" Errors="bp.VehicleFormErrors" ShowIfErrors="bp.AddVehicleButtonWasClicked" />

<table class="vehicles table table-bordered table-hover caption-top w-auto">
    <caption>Vehicles</caption>
    <thead>
        <tr>
            <th>RegNo</th>
            <th>Make</th>
            <th>Odometer</th>
            <th>Cost / Km</th>
            <th>Type</th>
            <th>Cost / Day</th>
            <th>Action</th>
            <th>Status</th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <td>
                <input @bind="bp.vehicleForm.RegNo" type="text" placeholder="RegNo" disabled="@bp.Processing" />
            </td>
            <td>
                <input @bind="bp.vehicleForm.Make" type="text" placeholder="Make" disabled="@bp.Processing" />
            </td>
            <td>
                <input @bind="bp.vehicleForm.Odometer" type="number" placeholder="Odometer" disabled="@bp.Processing" />
            </td>
            <td>
                <input @bind="bp.vehicleForm.CostKm" type="number" placeholder="Cost / Km" disabled="@bp.Processing" />
            </td>
            <td>
                <select @bind="bp.vehicleForm.Type" disabled="@bp.Processing">
                    <option selected hidden disabled>Select type</option>
                    @foreach (var type in bp.VehicleTypeNames)
                    {
                        <option>@type</option>
                    }
                </select>
            </td>
            <td>
                <input @bind="bp.vehicleForm.CostDay" type="number" placeholder="Cost / Day" disabled="@bp.Processing" />
            </td>
            <td>
                <button @onclick="bp.AddVehicle" class="btn btn-sm btn-outline-success" disabled="@bp.Processing">Add</button>
            </td>
            <td>
                @if (bp.Processing)
                {
                    <span class="badge text-bg-warning text-white">
                        Processing
                    </span>
                }
            </td>
        </tr>

        @foreach (var vehicle in bp.GetVehicles())
        {
            <tr>
                <td class="fw-bold">@vehicle.RegNo</td>
                <td>@vehicle.Make</td>
                <td>@vehicle.Odometer</td>
                <td>@vehicle.CostKm</td>
                <td>@vehicle.Type</td>
                <td>@vehicle.CostDay</td>
                <td>
                    @if (vehicle.Status == VehicleStatuses.Available)
                    {
                        <select @bind="bp.rentingCustomerSSN" aria-label="Renting customer" disabled="@bp.Processing">
                            <option selected hidden disabled>Select customer</option>
                            @foreach (var customer in bp.GetCustomers())
                            {
                                <option value="@customer.SSN">@customer.LastName @customer.FirstName (@customer.SSN)</option>
                            }
                        </select>
                        <button disabled="@(String.IsNullOrEmpty(bp.rentingCustomerSSN) || bp.Processing)" @onclick="(() => bp.RentVehicle(vehicle, bp.rentingCustomerSSN))" class="btn btn-sm btn-outline-primary">Rent</button>
                    }
                    else
                    {
                        <input @bind="bp.returnDistance" disabled="@bp.Processing" style="max-width: 140px;" type="number" placeholder="Distance">
                        <button disabled="@(bp.returnDistance is null || bp.Processing)" @onclick="(() => bp.ReturnVehicle(vehicle, bp.returnDistance))" class="btn btn-sm btn-outline-success">Return</button>
                    }
                </td>
                <td>
                    <span class="badge @(vehicle.Status == VehicleStatuses.Available ? "text-bg-dark" : "text-bg-danger")">
                        @vehicle.Status
                    </span>
                </td>
            </tr>
        }
    </tbody>
</table>

<table class="bookings table table-bordered table-hover caption-top w-auto">
    <caption>Bookings</caption>
    <thead>
        <tr>
            <th>Registration Number</th>
            <th>Customer</th>
            <th>Km Rented</th>
            <th>Km Returned</th>
            <th>Rented</th>
            <th>Returned</th>
            <th>Cost</th>
            <th>Status</th>
        </tr>
    </thead>
    @foreach (var booking in bp.GetBookings())
    {
        <tbody>
            <tr>
                <td class="fw-bold">@booking.Vehicle.RegNo</td>
                <td>@booking.Customer.LastName @booking.Customer.FirstName (@booking.Customer.SSN)</td>
                <td>@booking.KmRented</td>
                <td>@booking.KmReturned</td>
                <td>@booking.DateRented.ToString()</td>
                <td>@booking.DateReturned.ToString()</td>
                <td>@booking.Cost</td>
                <td>
                    <span class="badge @(booking.DateReturned is null ? "text-bg-danger" : "text-bg-success")">
                        @(booking.DateReturned is null ? "Open" : "Closed")
                    </span>
                </td>
            </tr>
        </tbody>
    }
</table>

<ErrorList Title="Errors when adding a customer" Errors="bp.CustomerFormErrors" ShowIfErrors="bp.AddCustomerButtonWasClicked" />

<table class="customers table table-bordered table-hover caption-top w-auto">
    <caption>Customers</caption>
    <thead>
        <tr>
            <th>SSN</th>
            <th>Last Name</th>
            <th>First Name</th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <td>
                <input @bind="bp.customerForm.SSN" type="text" placeholder="SSN" />
            </td>
            <td>
                <input @bind="bp.customerForm.LastName" type="text" placeholder="Last Name" />
            </td>
            <td>
                <input @bind="bp.customerForm.FirstName" type="text" placeholder="First Name" />
                <button @onclick="bp.AddCustomer" class="btn btn-sm btn-outline-success">Add</button>
            </td>
        </tr>
        @foreach (var customer in bp.GetCustomers())
        {
            <tr>
                <td class="fw-bold">@customer.SSN</td>
                <td>@customer.LastName</td>
                <td>@customer.FirstName</td>
            </tr>
        }
    </tbody>
</table>